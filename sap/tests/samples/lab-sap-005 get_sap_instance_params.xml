<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SAPControl="urn:SAPControl" xmlns:SAPCCMS="urn:SAPCCMS" xmlns:SAPHostControl="urn:SAPHostControl" xmlns:SAPLandscapeService="urn:SAPLandscapeService" xmlns:SAPMetricService="urn:SAPMetricService" xmlns:SAPOscol="urn:SAPOscol" xmlns:SAPDSR="urn:SAPDSR">
   <SOAP-ENV:Header/>
   <SOAP-ENV:Body>
      <SAPHostControl:GetCIMObjectResponse>
         <result>
            <item>
               <mProperties>
                  <item>
                     <mName>value</mName>
                     <mType>base64</mType>
                     <mValue></mValue>
                  </item>
               </mProperties>
            </item>
         </result>
      </SAPHostControl:GetCIMObjectResponse>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>